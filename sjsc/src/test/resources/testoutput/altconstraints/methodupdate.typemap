0 --> integer
10 --> integer
10 --> integer
2 * x --> integer
2 --> integer
3 --> integer
C --> ctor<0>[null]() -> {  | m1: [](integer) -> void, a: integer }
C --> ctor<0>[null]() -> {  | m1: [](integer) -> void, a: integer }
D --> ctor<0>[{  | m1: [](integer) -> void, a: integer }]() -> { m1: [](integer) -> void | a: integer }
D --> ctor<0>[{  | m1: [](integer) -> void, a: integer }]() -> { m1: [](integer) -> void | a: integer }
D --> ctor<0>[{  | m1: [](integer) -> void, a: integer }]() -> { m1: [](integer) -> void | a: integer }
D --> ctor<0>[{  | m1: [](integer) -> void, a: integer }]() -> { m1: [](integer) -> void | a: integer }
D.prototype --> {  | m1: [](integer) -> void, a: integer }
D.prototype --> {  | m1: [](integer) -> void, a: integer }
D.prototype = new C() --> {  | m1: [](integer) -> void, a: integer }
D.prototype.m1 --> [](integer) -> void
D.prototype.m1 = function(x) {
  this.a = 2 * x;
} --> [](integer) -> void
function C() {
  this.m1 = function(x) {
  this.a = 10;
};
  this.a = 10;
}
 --> ctor<0>[null]() -> {  | m1: [](integer) -> void, a: integer }
function D() {
  this.a = 0;
}
 --> ctor<0>[{  | m1: [](integer) -> void, a: integer }]() -> { m1: [](integer) -> void | a: integer }
function(x) {
  this.a = 10;
} --> [{  | a: integer }](integer) -> void
function(x) {
  this.a = 2 * x;
} --> [{  | a: integer }](integer) -> void
new C() --> {  | m1: [](integer) -> void, a: integer }
new D() --> { m1: [](integer) -> void | a: integer }
o1 --> { m1: [](integer) -> void | a: integer }
o1 --> { m1: [](integer) -> void | a: integer }
o1.m1 --> [](integer) -> void
o1.m1(3) --> void
this --> {  | a: integer }
this --> {  | a: integer }
this --> {  | m1: [](integer) -> void, a: integer }
this --> {  | m1: [](integer) -> void, a: integer }
this --> { m1: [](integer) -> void | a: integer }
this.a --> integer
this.a --> integer
this.a --> integer
this.a --> integer
this.a = 0 --> integer
this.a = 10 --> integer
this.a = 10 --> integer
this.a = 2 * x --> integer
this.m1 --> [](integer) -> void
this.m1 = function(x) {
  this.a = 10;
} --> [](integer) -> void
x --> integer
x --> integer
x --> integer
