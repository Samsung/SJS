"!" --> string
"foo" --> string
"hello" --> string
65 --> integer
66 --> integer
String --> { fromCharCode: [](integer) -> string |  } INTERSECT () -> string INTERSECT (string) -> string
String --> { fromCharCode: [](integer) -> string |  } INTERSECT () -> string INTERSECT (string) -> string
String --> { fromCharCode: [](integer) -> string |  } INTERSECT () -> string INTERSECT (string) -> string
String --> { fromCharCode: [](integer) -> string |  } INTERSECT () -> string INTERSECT (string) -> string
String("hello") --> string
String() --> string
String.fromCharCode --> [](integer) -> string
String.fromCharCode(65) --> string
console --> { log: [](string) -> void, assert: [](boolean) -> void, error: [](string) -> void, warn: [](string) -> void |  }
console --> { log: [](string) -> void, assert: [](boolean) -> void, error: [](string) -> void, warn: [](string) -> void |  }
console --> { log: [](string) -> void, assert: [](boolean) -> void, error: [](string) -> void, warn: [](string) -> void |  }
console --> { log: [](string) -> void, assert: [](boolean) -> void, error: [](string) -> void, warn: [](string) -> void |  }
console --> { log: [](string) -> void, assert: [](boolean) -> void, error: [](string) -> void, warn: [](string) -> void |  }
console.log --> [](string) -> void
console.log --> [](string) -> void
console.log --> [](string) -> void
console.log --> [](string) -> void
console.log --> [](string) -> void
console.log(p) --> void
console.log(q) --> void
console.log(x + "!") --> void
console.log(y) --> void
console.log(z) --> void
p --> string
p --> string
q --> string
q --> string
s --> { fromCharCode: [](integer) -> string |  } INTERSECT () -> string INTERSECT (string) -> string
s --> { fromCharCode: [](integer) -> string |  } INTERSECT () -> string INTERSECT (string) -> string
s --> { fromCharCode: [](integer) -> string |  } INTERSECT () -> string INTERSECT (string) -> string
s("foo") --> string
s.fromCharCode --> [](integer) -> string
s.fromCharCode(66) --> string
x + "!" --> string
x --> string
x --> string
y --> string
y --> string
z --> string
z --> string
