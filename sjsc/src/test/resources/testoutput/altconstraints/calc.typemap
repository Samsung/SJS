"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"" --> string
"+" --> string
"-" --> string
"-" --> string
"-" --> string
"-" --> string
"-INF" --> string
"-INF" --> string
"-INF" --> string
"-INF" --> string
"-inf" --> string
"." --> string
"." --> string
"." --> string
"." --> string
"0" --> string
"0" --> string
"0" --> string
"0" --> string
"0" --> string
"0" --> string
"0" --> string
"0" --> string
"0" --> string
"0" --> string
"1" --> string
"Bad!" --> string
"Bad" --> string
"Calculator" --> string
"ERROR" --> string
"IDC_BTN_0" --> string
"IDC_BTN_1" --> string
"IDC_BTN_2" --> string
"IDC_BTN_3" --> string
"IDC_BTN_4" --> string
"IDC_BTN_5" --> string
"IDC_BTN_6" --> string
"IDC_BTN_7" --> string
"IDC_BTN_8" --> string
"IDC_BTN_9" --> string
"IDC_BTN_BACK" --> string
"IDC_BTN_CLEAR" --> string
"IDC_BTN_DIVIDE" --> string
"IDC_BTN_DOT" --> string
"IDC_BTN_EQUAL" --> string
"IDC_BTN_MINUS" --> string
"IDC_BTN_MULTIPLY" --> string
"IDC_BTN_PLUS" --> string
"IDC_LBL_DISPLAY" --> string
"IDF_FORM" --> string
"INF" --> string
"INF" --> string
"INF" --> string
"INF" --> string
"NAN" --> string
"e" --> string
"hello" --> string
"inf" --> string
(BTN_ID_0 <= k) && (k <= BTN_ID_9) --> boolean
(BTN_ID_0 <= k) --> boolean
(indexOfDec == -1 && op1.toString().length > 8) --> boolean
(k <= BTN_ID_9) --> boolean
(k === BTN_ID_MINUS) --> boolean
(k === BTN_ID_PLUS) --> boolean
(k === BTN_ID_PLUS) || (k === BTN_ID_MINUS) --> boolean
(l - indexOfDec) --> integer
(l - indexOfDec) > DIGITS_AFTER_DECIMAL_POINT --> boolean
(this.errString == "-INF") --> boolean
(this.errString == "INF") --> boolean
(this.errString == "INF") || (this.errString == "-INF") --> boolean
(this.op1 == "") --> boolean
(this.op1 == "") || (this.op1 == "0") --> boolean
(this.op1 == "0") --> boolean
(this.state.errString == "-INF") --> boolean
(this.state.errString == "INF") --> boolean
(this.state.errString == "INF") || (this.state.errString == "-INF") --> boolean
-1 --> integer
-1 --> integer
-1 --> integer
-1 --> integer
0 --> integer
0 --> integer
0 --> integer
0 --> integer
0 --> integer
0 --> integer
0 --> integer
0 --> integer
0 --> integer
0 --> integer
0 --> integer
0 --> integer
0 --> integer
0 --> integer
0 --> integer
0.000000001 --> float
1 --> integer
1 --> integer
1 --> integer
1 --> integer
1 --> integer
1 --> integer
1 --> integer
1 --> integer
1 --> integer
10 --> integer
100 --> integer
101 --> integer
102 --> integer
103 --> integer
104 --> integer
11 --> integer
12 --> integer
13 --> integer
14 --> integer
15 --> integer
15 --> integer
16 --> integer
17 --> integer
18 --> integer
2 --> integer
2 --> integer
20 --> integer
3 --> integer
4 --> integer
5 --> integer
6 --> integer
7 --> integer
7 --> integer
7 --> integer
7 --> integer
8 --> integer
8 --> integer
9 --> integer
9 --> integer
ALIGNMENT_RIGHT --> integer
ALIGNMENT_RIGHT --> integer
BTN_ID_0 --> integer
BTN_ID_0 --> integer
BTN_ID_0 --> integer
BTN_ID_0 <= k --> boolean
BTN_ID_1 --> integer
BTN_ID_1 --> integer
BTN_ID_2 --> integer
BTN_ID_2 --> integer
BTN_ID_3 --> integer
BTN_ID_3 --> integer
BTN_ID_4 --> integer
BTN_ID_4 --> integer
BTN_ID_5 --> integer
BTN_ID_5 --> integer
BTN_ID_6 --> integer
BTN_ID_6 --> integer
BTN_ID_7 --> integer
BTN_ID_7 --> integer
BTN_ID_8 --> integer
BTN_ID_8 --> integer
BTN_ID_9 --> integer
BTN_ID_9 --> integer
BTN_ID_9 --> integer
BTN_ID_BACK --> integer
BTN_ID_BACK --> integer
BTN_ID_CLEAR --> integer
BTN_ID_CLEAR --> integer
BTN_ID_COUNT --> integer
BTN_ID_COUNT --> integer
BTN_ID_COUNT --> integer
BTN_ID_COUNT --> integer
BTN_ID_COUNT --> integer
BTN_ID_DIVIDE --> integer
BTN_ID_DIVIDE --> integer
BTN_ID_DIVIDE --> integer
BTN_ID_DIVIDE --> integer
BTN_ID_DOT --> integer
BTN_ID_DOT --> integer
BTN_ID_DOT --> integer
BTN_ID_EQUAL --> integer
BTN_ID_EQUAL --> integer
BTN_ID_MINUS --> integer
BTN_ID_MINUS --> integer
BTN_ID_MINUS --> integer
BTN_ID_MINUS --> integer
BTN_ID_MINUS --> integer
BTN_ID_MINUS --> integer
BTN_ID_MULTIPLY --> integer
BTN_ID_MULTIPLY --> integer
BTN_ID_MULTIPLY --> integer
BTN_ID_MULTIPLY --> integer
BTN_ID_PLUS --> integer
BTN_ID_PLUS --> integer
BTN_ID_PLUS --> integer
BTN_ID_PLUS --> integer
BTN_ID_PLUS --> integer
BTN_ID_PLUS --> integer
CalcActionEventListener --> ctor<0>[{ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }]({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }
CalcActionEventListener --> ctor<0>[{ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }]({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }
CalcActionEventListener --> ctor<0>[{ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }]({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }
CalcActionEventListener.prototype --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }
CalcActionEventListener.prototype = new TizenLib.IActionEventListener() --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }
Calculator --> ctor<0>[{ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, Terminate: []() -> void | OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean }
Calculator --> ctor<0>[{ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, Terminate: []() -> void | OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean }
Calculator --> ctor<0>[{ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, Terminate: []() -> void | OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean }
Calculator.prototype --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }
Calculator.prototype = new TizenLib.Application() --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }
CalculatorForm --> ctor<0>[{ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
CalculatorForm --> ctor<0>[{ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
CalculatorForm --> ctor<0>[{ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
CalculatorForm.prototype --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }
CalculatorForm.prototype = new TizenLib.Form() --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }
CalculatorModel --> ctor<0>[null]() -> {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }
CalculatorModel --> ctor<0>[null]() -> {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }
DIGITS_AFTER_DECIMAL_POINT --> integer
DIGITS_AFTER_DECIMAL_POINT --> integer
E_SUCCESS --> integer
E_SUCCESS --> integer
E_SUCCESS --> integer
E_SUCCESS --> integer
E_SUCCESS --> integer
HEADER_STYLE_TITLE --> integer
HEADER_STYLE_TITLE --> integer
IDC_BTN_0 --> string
IDC_BTN_0 --> string
IDC_BTN_1 --> string
IDC_BTN_1 --> string
IDC_BTN_2 --> string
IDC_BTN_2 --> string
IDC_BTN_3 --> string
IDC_BTN_3 --> string
IDC_BTN_4 --> string
IDC_BTN_4 --> string
IDC_BTN_5 --> string
IDC_BTN_5 --> string
IDC_BTN_6 --> string
IDC_BTN_6 --> string
IDC_BTN_7 --> string
IDC_BTN_7 --> string
IDC_BTN_8 --> string
IDC_BTN_8 --> string
IDC_BTN_9 --> string
IDC_BTN_9 --> string
IDC_BTN_BACK --> string
IDC_BTN_BACK --> string
IDC_BTN_CLEAR --> string
IDC_BTN_CLEAR --> string
IDC_BTN_DIVIDE --> string
IDC_BTN_DIVIDE --> string
IDC_BTN_DOT --> string
IDC_BTN_DOT --> string
IDC_BTN_EQUAL --> string
IDC_BTN_EQUAL --> string
IDC_BTN_MINUS --> string
IDC_BTN_MINUS --> string
IDC_BTN_MULTIPLY --> string
IDC_BTN_MULTIPLY --> string
IDC_BTN_PLUS --> string
IDC_BTN_PLUS --> string
IDC_LBL_DISPLAY --> string
IDC_LBL_DISPLAY --> string
MAX_DIGITS_AFTER_DECIMAL_POINT --> integer
MAX_DIGITS_AFTER_DECIMAL_POINT --> integer
MAX_DIGITS_DISPLAY - 1 --> integer
MAX_DIGITS_DISPLAY --> integer
MAX_DIGITS_DISPLAY --> integer
MAX_DIGITS_DISPLAY --> integer
MAX_PRINTABLE_CHARS --> integer
MAX_PRINTABLE_CHARS --> integer
MIN_PRINTABLE_VALUE --> float
MIN_PRINTABLE_VALUE --> float
MODE_INVALID --> integer
MODE_INVALID --> integer
MODE_INVALID --> integer
MODE_INVALID --> integer
MODE_INVALID --> integer
MODE_INVALID --> integer
MODE_INVALID --> integer
MODE_INVALID --> integer
MODE_INVALID --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND1 --> integer
MODE_OPERAND2 --> integer
MODE_OPERAND2 --> integer
MODE_OPERAND2 --> integer
MODE_OPERAND2 --> integer
MODE_OPERAND2 --> integer
MODE_OPERAND2 --> integer
MODE_OPERAND2 --> integer
MODE_OPERAND2 --> integer
MODE_OPERATOR --> integer
MODE_OPERATOR --> integer
MODE_OPERATOR --> integer
MODE_OPERATOR --> integer
MODE_OPERATOR --> integer
MODE_OPERATOR --> integer
MODE_OPERATOR --> integer
MODE_OPERATOR --> integer
MODE_RESULT --> integer
MODE_RESULT --> integer
MODE_RESULT --> integer
MODE_RESULT --> integer
MODE_RESULT --> integer
MODE_RESULT --> integer
MODE_RESULT --> integer
State --> ctor<0>[null]() -> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
State --> ctor<0>[null]() -> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
TizenLib --> { Control: ctor<0>[null]() -> { _____cpp_receiver: void |  }, String: ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }, Form: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }, Application: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }, Button: ctor<0>[null]() -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, IFormBackEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }, IActionEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }, AppRegistry: ctor<0>[null]() -> { _____cpp_receiver: void |  }, Header: ctor<0>[null]() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Label: ctor<0>[null]() -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, Frame: ctor<0>[null]() -> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }, casts: { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  } |  }
TizenLib --> { Control: ctor<0>[null]() -> { _____cpp_receiver: void |  }, String: ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }, Form: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }, Application: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }, Button: ctor<0>[null]() -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, IFormBackEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }, IActionEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }, AppRegistry: ctor<0>[null]() -> { _____cpp_receiver: void |  }, Header: ctor<0>[null]() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Label: ctor<0>[null]() -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, Frame: ctor<0>[null]() -> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }, casts: { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  } |  }
TizenLib --> { Control: ctor<0>[null]() -> { _____cpp_receiver: void |  }, String: ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }, Form: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }, Application: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }, Button: ctor<0>[null]() -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, IFormBackEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }, IActionEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }, AppRegistry: ctor<0>[null]() -> { _____cpp_receiver: void |  }, Header: ctor<0>[null]() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Label: ctor<0>[null]() -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, Frame: ctor<0>[null]() -> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }, casts: { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  } |  }
TizenLib --> { Control: ctor<0>[null]() -> { _____cpp_receiver: void |  }, String: ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }, Form: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }, Application: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }, Button: ctor<0>[null]() -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, IFormBackEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }, IActionEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }, AppRegistry: ctor<0>[null]() -> { _____cpp_receiver: void |  }, Header: ctor<0>[null]() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Label: ctor<0>[null]() -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, Frame: ctor<0>[null]() -> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }, casts: { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  } |  }
TizenLib --> { Control: ctor<0>[null]() -> { _____cpp_receiver: void |  }, String: ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }, Form: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }, Application: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }, Button: ctor<0>[null]() -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, IFormBackEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }, IActionEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }, AppRegistry: ctor<0>[null]() -> { _____cpp_receiver: void |  }, Header: ctor<0>[null]() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Label: ctor<0>[null]() -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, Frame: ctor<0>[null]() -> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }, casts: { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  } |  }
TizenLib --> { Control: ctor<0>[null]() -> { _____cpp_receiver: void |  }, String: ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }, Form: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }, Application: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }, Button: ctor<0>[null]() -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, IFormBackEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }, IActionEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }, AppRegistry: ctor<0>[null]() -> { _____cpp_receiver: void |  }, Header: ctor<0>[null]() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Label: ctor<0>[null]() -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, Frame: ctor<0>[null]() -> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }, casts: { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  } |  }
TizenLib --> { Control: ctor<0>[null]() -> { _____cpp_receiver: void |  }, String: ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }, Form: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }, Application: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }, Button: ctor<0>[null]() -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, IFormBackEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }, IActionEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }, AppRegistry: ctor<0>[null]() -> { _____cpp_receiver: void |  }, Header: ctor<0>[null]() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Label: ctor<0>[null]() -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, Frame: ctor<0>[null]() -> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }, casts: { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  } |  }
TizenLib --> { Control: ctor<0>[null]() -> { _____cpp_receiver: void |  }, String: ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }, Form: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }, Application: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }, Button: ctor<0>[null]() -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, IFormBackEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }, IActionEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }, AppRegistry: ctor<0>[null]() -> { _____cpp_receiver: void |  }, Header: ctor<0>[null]() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Label: ctor<0>[null]() -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, Frame: ctor<0>[null]() -> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }, casts: { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  } |  }
TizenLib --> { Control: ctor<0>[null]() -> { _____cpp_receiver: void |  }, String: ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }, Form: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }, Application: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }, Button: ctor<0>[null]() -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, IFormBackEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }, IActionEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }, AppRegistry: ctor<0>[null]() -> { _____cpp_receiver: void |  }, Header: ctor<0>[null]() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Label: ctor<0>[null]() -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, Frame: ctor<0>[null]() -> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }, casts: { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  } |  }
TizenLib --> { Control: ctor<0>[null]() -> { _____cpp_receiver: void |  }, String: ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }, Form: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }, Application: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }, Button: ctor<0>[null]() -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, IFormBackEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }, IActionEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }, AppRegistry: ctor<0>[null]() -> { _____cpp_receiver: void |  }, Header: ctor<0>[null]() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Label: ctor<0>[null]() -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, Frame: ctor<0>[null]() -> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }, casts: { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  } |  }
TizenLib --> { Control: ctor<0>[null]() -> { _____cpp_receiver: void |  }, String: ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }, Form: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }, Application: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }, Button: ctor<0>[null]() -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, IFormBackEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }, IActionEventListener: ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }, AppRegistry: ctor<0>[null]() -> { _____cpp_receiver: void |  }, Header: ctor<0>[null]() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Label: ctor<0>[null]() -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, Frame: ctor<0>[null]() -> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }, casts: { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  } |  }
TizenLib.Application --> ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }
TizenLib.Form --> ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }
TizenLib.Frame --> ctor<0>[null]() -> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }
TizenLib.IActionEventListener --> ctor<0>[null]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }
TizenLib.String --> ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
TizenLib.String --> ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
TizenLib.String --> ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
TizenLib.String --> ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
TizenLib.String --> ctor<0>[null](string) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
TizenLib.casts --> { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  }
TizenLib.casts --> { Button_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }, Label_of_Control: ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  } |  }
TizenLib.casts.Button_of_Control --> ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }
TizenLib.casts.Button_of_Control(this.GetControl(button_name)) --> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }
TizenLib.casts.Label_of_Control --> ({ _____cpp_receiver: void |  }) -> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }
TizenLib.casts.Label_of_Control(this.GetControl(id)) --> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }
[IDC_BTN_0, IDC_BTN_1, IDC_BTN_2, IDC_BTN_3, IDC_BTN_4, IDC_BTN_5, IDC_BTN_6, IDC_BTN_7, IDC_BTN_8, IDC_BTN_9, IDC_BTN_DOT, IDC_BTN_PLUS, IDC_BTN_MINUS, IDC_BTN_MULTIPLY, IDC_BTN_DIVIDE, IDC_BTN_BACK, IDC_BTN_CLEAR, IDC_BTN_EQUAL] --> Array<string>
__platform_return --> ({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }) -> void
__platform_return(calc) --> void
actionId --> integer
actionId --> integer
appRegistry --> { _____cpp_receiver: void |  }
appRegistry --> { _____cpp_receiver: void |  }
button --> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }
button --> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }
button --> { _____cpp_receiver: void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void, SetActionId: [](integer) -> void, AddActionEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void |  }
button.AddActionEventListener --> []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }) -> void
button.AddActionEventListener(this.ael) --> void
button.SetActionId --> [](integer) -> void
button.SetActionId(i) --> void
button_name --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
button_name --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
calc --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, Terminate: []() -> void | OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean }
calc --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, Terminate: []() -> void | OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean }
charCount --> integer
charCount --> integer
charCount --> integer
charCount --> integer
charCount++ --> integer
charCount++ --> integer
console --> { log: [](string) -> void, assert: [](boolean) -> void, error: [](string) -> void, warn: [](string) -> void |  }
console --> { log: [](string) -> void, assert: [](boolean) -> void, error: [](string) -> void, warn: [](string) -> void |  }
console --> { log: [](string) -> void, assert: [](boolean) -> void, error: [](string) -> void, warn: [](string) -> void |  }
console --> { log: [](string) -> void, assert: [](boolean) -> void, error: [](string) -> void, warn: [](string) -> void |  }
console.log --> [](string) -> void
console.log --> [](string) -> void
console.log --> [](string) -> void
console.log --> [](string) -> void
console.log("Bad!") --> void
console.log("hello") --> void
console.log(displayText) --> void
console.log(this.state.errString) --> void
displayText --> string
displayText --> string
displayText --> string
displayText --> string
displayText --> string
displayText --> string
displayText --> string
displayText --> string
displayText --> string
displayText --> string
displayText --> string
displayText --> string
displayText --> string
displayText --> string
displayText = "0" --> string
displayText = displayText.substring(0, MAX_DIGITS_DISPLAY - 1) --> string
displayText = displayText.substring(0, indexOfDec + MAX_DIGITS_AFTER_DECIMAL_POINT - 1) --> string
displayText == "" --> boolean
displayText.indexOf --> [](string) -> integer
displayText.indexOf --> [](string) -> integer
displayText.indexOf(".") --> integer
displayText.indexOf("e") --> integer
displayText.length --> integer
displayText.substring --> [](integer,integer) -> string
displayText.substring --> [](integer,integer) -> string
displayText.substring(0, MAX_DIGITS_DISPLAY - 1) --> string
displayText.substring(0, indexOfDec + MAX_DIGITS_AFTER_DECIMAL_POINT - 1) --> string
f --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
f --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
false --> boolean
false --> boolean
form --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
form --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
form --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
form --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
form.init --> []() -> integer
form.init() --> integer
frame --> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }
frame --> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }
frame --> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }
frame --> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }
frame --> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }
frame.AddControl --> []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer
frame.AddControl(form) --> integer
frame.Construct --> []() -> integer
frame.Construct() --> integer
frame.SetCurrentForm --> []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer
frame.SetCurrentForm(form) --> integer
function CalcActionEventListener(f) {
  this.calcForm = f;
  this.OnActionPerformed = function(source, actionId) {
  var displayText = this.calcForm.calcModel.OnActionPerformed(actionId);
  var s = new TizenLib.String(displayText);
  this.calcForm.labelPrint.SetText(s);
  this.calcForm.Draw();
};
}
 --> ctor<0>[{ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }]({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }) -> { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }
function Calculator() {
  this.OnAppInitializing = function(appRegistry) {
  var frame = new TizenLib.Frame();
  frame.Construct();
  this.AddFrame(frame);
  var form = new CalculatorForm();
  form.init();
  frame.AddControl(form);
  frame.SetCurrentForm(form);
  return true;
};
  this.OnAppTerminating = function(appRegistry, urgent) {
  var x = this;
  return true;
};
}
 --> ctor<0>[{ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, Terminate: []() -> void | OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean }
function CalculatorForm() {
  this.labelPrint = null;
  this.ael = new CalcActionEventListener(this);
  this.calcModel = new CalculatorModel();
  this.button_names = null;
  this.labelPrint = null;
  this.init = function() {
  var path = new TizenLib.String("IDF_FORM");
  var r = this.Construct(path);
  var hdr = this.GetHeader();
  r = hdr.SetStyle(HEADER_STYLE_TITLE);
  var title = new TizenLib.String("Calculator");
  r = hdr.SetTitleText(title);
  return r;
};
  this.OnInitializing = function() {
  var r = E_SUCCESS;
  r = this.AddCalculatorPanel();
  return r;
};
  this.OnTerminating = function() {
  var x = this;
  return E_SUCCESS;
};
  this.OnDraw = function() {
  var x = this;
  return E_SUCCESS;
};
  this.AddCalculatorPanel = function() {
  this.button_names = [IDC_BTN_0, IDC_BTN_1, IDC_BTN_2, IDC_BTN_3, IDC_BTN_4, IDC_BTN_5, IDC_BTN_6, IDC_BTN_7, IDC_BTN_8, IDC_BTN_9, IDC_BTN_DOT, IDC_BTN_PLUS, IDC_BTN_MINUS, IDC_BTN_MULTIPLY, IDC_BTN_DIVIDE, IDC_BTN_BACK, IDC_BTN_CLEAR, IDC_BTN_EQUAL];
  var i = 0;
  while (i < BTN_ID_COUNT) 
    {
      var button_name = new TizenLib.String(this.button_names[i]);
      var button = TizenLib.casts.Button_of_Control(this.GetControl(button_name));
      button.SetActionId(i);
      button.AddActionEventListener(this.ael);
      i++;
    }
  var id = new TizenLib.String(IDC_LBL_DISPLAY);
  this.labelPrint = TizenLib.casts.Label_of_Control(this.GetControl(id));
  this.labelPrint.SetTextHorizontalAlignment(ALIGNMENT_RIGHT);
  return E_SUCCESS;
};
}
 --> ctor<0>[{ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }]() -> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
function CalculatorModel() {
  this.state = new State();
  this.OnActionPerformed = function(k) {
  var status;
  switch (k) {
    case BTN_ID_0:
    case BTN_ID_1:
    case BTN_ID_2:
    case BTN_ID_3:
    case BTN_ID_4:
    case BTN_ID_5:
    case BTN_ID_6:
    case BTN_ID_7:
    case BTN_ID_8:
    case BTN_ID_9:
    case BTN_ID_DOT:
      status = this.state.HandleNumKeys(k);
      if (status === false) 
      {
        console.log("Bad!");
        return "Bad";
      }
      break;
    case BTN_ID_PLUS:
    case BTN_ID_MINUS:
    case BTN_ID_MULTIPLY:
    case BTN_ID_DIVIDE:
      this.state.HandleOperatorKeys(k);
      break;
    case BTN_ID_BACK:
      this.state.HandleBackKey();
      break;
    case BTN_ID_CLEAR:
      this.state.HandleClearKey();
      break;
    case BTN_ID_EQUAL:
      this.state.HandleEqualKey();
      break;
  }
  if ((this.state.errString == "INF") || (this.state.errString == "-INF")) 
  {
    console.log(this.state.errString);
    return this.state.errString;
  }
  var displayText = this.state.GetResult();
  if (displayText == "") 
  {
    displayText = "0";
  }
  var indexOfDec = displayText.indexOf(".");
  var indexOfE = displayText.indexOf("e");
  var l = displayText.length;
  if (l > MAX_DIGITS_DISPLAY) 
  {
    if ((l - indexOfDec) > DIGITS_AFTER_DECIMAL_POINT) 
    {
      if (indexOfE > 0) 
      {
        displayText = displayText.substring(0, indexOfDec + MAX_DIGITS_AFTER_DECIMAL_POINT - 1);
      } else {
        displayText = displayText.substring(0, MAX_DIGITS_DISPLAY - 1);
      }
    }
  }
  console.log(displayText);
  return displayText;
};
}
 --> ctor<0>[null]() -> {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }
function State() {
  this.errString = "ERROR";
  this.calcMode = MODE_OPERAND1;
  this.operator = BTN_ID_COUNT;
  this.op1 = "0";
  this.op2 = "";
  this.GetResult = function() {
  switch (this.calcMode) {
    case MODE_OPERATOR:
    case MODE_RESULT:
    case MODE_OPERAND1:
      return this.op1;
    case MODE_OPERAND2:
      if (this.op2 == "") 
      {
        return this.op1;
      }
      return this.op2;
    case MODE_INVALID:
      return this.errString;
  }
  return this.errString;
};
  this.UpdateOperand = function(k) {
  var op = "";
  var charCount = MAX_PRINTABLE_CHARS;
  var index = -1;
  if (this.calcMode === MODE_OPERAND1) 
  {
    op = this.op1;
  } else {
    op = this.op2;
  }
  var sign = op.charAt(0);
  if (sign == "-" || sign == "+") 
  {
    charCount++;
  }
  index = op.indexOf(".");
  if (index != -1) 
  {
    charCount++;
  }
  if (op.length < charCount) 
  {
    if (k == BTN_ID_DOT) 
    {
      if (index == -1) 
      {
        if (op == "" || op == "-") 
        {
          op = op.concat("0");
        }
        op = op.concat(".");
      }
    } else if ((BTN_ID_0 <= k) && (k <= BTN_ID_9)) 
    {
      if (op == "0") 
      {
        op = "";
      }
      op = op.concat(k.toString());
    } else if (k == BTN_ID_MINUS) 
    {
      if (op == "") 
      {
        op = op.concat("-");
      }
    }
    if (this.calcMode === MODE_OPERAND1) 
    {
      this.op1 = op;
    } else {
      this.op2 = op;
    }
    return true;
  }
  return false;
};
  this.HandleNumKeys = function(k) {
  switch (this.calcMode) {
    case MODE_INVALID:
      return true;
    case MODE_RESULT:
      this.HandleClearKey();
      this.calcMode = MODE_OPERAND1;
      break;
    case MODE_OPERATOR:
      this.op2 = "";
      this.calcMode = MODE_OPERAND2;
      break;
    case MODE_OPERAND1:
    case MODE_OPERAND2:
      break;
  }
  return this.UpdateOperand(k);
};
  this.HandleOperatorKeys = function(k) {
  switch (this.calcMode) {
    case MODE_INVALID:
      return;
    case MODE_OPERATOR:
      if ((k === BTN_ID_PLUS) || (k === BTN_ID_MINUS)) 
      {
        this.op2 = "";
        this.UpdateOperand(k);
        this.calcMode = MODE_OPERAND2;
        break;
      }
      this.operator = k;
      break;
    case MODE_OPERAND1:
      if ((this.op1 == "") || (this.op1 == "0")) 
      {
        if (k == BTN_ID_PLUS || k == BTN_ID_MINUS) 
        {
          if (this.op1 == "0") 
          {
            this.UpdateOperand(k);
          } else {
            this.op1 = "";
            this.UpdateOperand(k);
            break;
          }
        }
        this.op1 = "0";
      }
      this.calcMode = MODE_OPERATOR;
      this.operator = k;
      break;
    case MODE_OPERAND2:
      this.HandleEqualKey();
    case MODE_RESULT:
      this.calcMode = MODE_OPERAND1;
      this.op2 = "";
      this.HandleOperatorKeys(k);
      break;
  }
};
  this.Calculate = function() {
  if ((this.errString == "INF") || (this.errString == "-INF")) 
  return;
  var op1 = parseFloat(this.op1);
  var op2 = parseFloat(this.op2);
  switch (this.operator) {
    case BTN_ID_PLUS:
      op1 += op2;
      break;
    case BTN_ID_MINUS:
      op1 -= op2;
      break;
    case BTN_ID_MULTIPLY:
      op1 *= op2;
      break;
    case BTN_ID_DIVIDE:
      if (op2 != 0) 
      {
        op1 /= op2;
      } else {
        this.calcMode = MODE_INVALID;
        if (op1 == 0) 
        {
          this.errString = "NAN";
        } else {
          if (op1 > 0) 
          {
            this.errString = "INF";
          } else {
            this.errString = "-INF";
          }
        }
        return;
      }
      break;
  }
  var indexOfDec = 0;
  indexOfDec = op1.toString().indexOf(".");
  if (indexOfDec > 7 || (indexOfDec == -1 && op1.toString().length > 8)) 
  {
    this.op1 = op1.toExponential(7);
  } else {
    this.op1 = op1.toString();
  }
  if (op1 > 0 && op1 < MIN_PRINTABLE_VALUE) 
  {
    this.op1 = "0";
  }
  if (this.op1 == "inf") 
  {
    this.errString = "INF";
    this.calcMode = MODE_INVALID;
  } else if (this.op1 == "-inf") 
  {
    this.errString = "-INF";
    this.calcMode = MODE_INVALID;
  } else {
    this.calcMode = MODE_RESULT;
  }
};
  this.HandleEqualKey = function() {
  switch (this.calcMode) {
    case MODE_INVALID:
      return;
    case MODE_OPERATOR:
      this.op2 = this.op1;
      break;
    case MODE_OPERAND1:
      this.op2 = "0";
      this.operator = BTN_ID_PLUS;
      break;
    case MODE_OPERAND2:
      if (this.op2 == "" || this.op2 == "-") 
      {
        if (this.operator == BTN_ID_MULTIPLY || this.operator == BTN_ID_DIVIDE) 
        {
          this.op2 = "1";
        } else {
          this.op2 = "0";
        }
      }
      break;
    case MODE_RESULT:
      break;
  }
  this.Calculate();
};
  this.HandleClearKey = function() {
  this.calcMode = MODE_OPERAND1;
  this.operator = BTN_ID_COUNT;
  this.op1 = "";
  this.op2 = "";
  this.errString = "";
};
  this.HandleBackKey = function() {
  switch (this.calcMode) {
    case MODE_RESULT:
    case MODE_INVALID:
      return;
    case MODE_OPERATOR:
      this.operator = BTN_ID_COUNT;
      this.calcMode = MODE_OPERAND1;
    case MODE_OPERAND1:
      if (this.op1 != "") 
      {
        this.op1 = this.op1.substring(0, this.op1.length - 1);
      }
      break;
    case MODE_OPERAND2:
      if (this.op2 != "") 
      {
        this.op2 = this.op2.substring(0, this.op2.length - 1);
      } else {
        this.calcMode = MODE_OPERATOR;
        this.HandleBackKey();
      }
      break;
  }
};
}
 --> ctor<0>[null]() -> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
function() {
  if ((this.errString == "INF") || (this.errString == "-INF")) 
  return;
  var op1 = parseFloat(this.op1);
  var op2 = parseFloat(this.op2);
  switch (this.operator) {
    case BTN_ID_PLUS:
      op1 += op2;
      break;
    case BTN_ID_MINUS:
      op1 -= op2;
      break;
    case BTN_ID_MULTIPLY:
      op1 *= op2;
      break;
    case BTN_ID_DIVIDE:
      if (op2 != 0) 
      {
        op1 /= op2;
      } else {
        this.calcMode = MODE_INVALID;
        if (op1 == 0) 
        {
          this.errString = "NAN";
        } else {
          if (op1 > 0) 
          {
            this.errString = "INF";
          } else {
            this.errString = "-INF";
          }
        }
        return;
      }
      break;
  }
  var indexOfDec = 0;
  indexOfDec = op1.toString().indexOf(".");
  if (indexOfDec > 7 || (indexOfDec == -1 && op1.toString().length > 8)) 
  {
    this.op1 = op1.toExponential(7);
  } else {
    this.op1 = op1.toString();
  }
  if (op1 > 0 && op1 < MIN_PRINTABLE_VALUE) 
  {
    this.op1 = "0";
  }
  if (this.op1 == "inf") 
  {
    this.errString = "INF";
    this.calcMode = MODE_INVALID;
  } else if (this.op1 == "-inf") 
  {
    this.errString = "-INF";
    this.calcMode = MODE_INVALID;
  } else {
    this.calcMode = MODE_RESULT;
  }
} --> [{ operator: integer, op2: string | calcMode: integer, errString: string, op1: string }]() -> void
function() {
  switch (this.calcMode) {
    case MODE_INVALID:
      return;
    case MODE_OPERATOR:
      this.op2 = this.op1;
      break;
    case MODE_OPERAND1:
      this.op2 = "0";
      this.operator = BTN_ID_PLUS;
      break;
    case MODE_OPERAND2:
      if (this.op2 == "" || this.op2 == "-") 
      {
        if (this.operator == BTN_ID_MULTIPLY || this.operator == BTN_ID_DIVIDE) 
        {
          this.op2 = "1";
        } else {
          this.op2 = "0";
        }
      }
      break;
    case MODE_RESULT:
      break;
  }
  this.Calculate();
} --> [{ Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }]() -> void
function() {
  switch (this.calcMode) {
    case MODE_OPERATOR:
    case MODE_RESULT:
    case MODE_OPERAND1:
      return this.op1;
    case MODE_OPERAND2:
      if (this.op2 == "") 
      {
        return this.op1;
      }
      return this.op2;
    case MODE_INVALID:
      return this.errString;
  }
  return this.errString;
} --> [{ errString: string, op2: string, op1: string, calcMode: integer |  }]() -> string
function() {
  switch (this.calcMode) {
    case MODE_RESULT:
    case MODE_INVALID:
      return;
    case MODE_OPERATOR:
      this.operator = BTN_ID_COUNT;
      this.calcMode = MODE_OPERAND1;
    case MODE_OPERAND1:
      if (this.op1 != "") 
      {
        this.op1 = this.op1.substring(0, this.op1.length - 1);
      }
      break;
    case MODE_OPERAND2:
      if (this.op2 != "") 
      {
        this.op2 = this.op2.substring(0, this.op2.length - 1);
      } else {
        this.calcMode = MODE_OPERATOR;
        this.HandleBackKey();
      }
      break;
  }
} --> [{ HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }]() -> void
function() {
  this.button_names = [IDC_BTN_0, IDC_BTN_1, IDC_BTN_2, IDC_BTN_3, IDC_BTN_4, IDC_BTN_5, IDC_BTN_6, IDC_BTN_7, IDC_BTN_8, IDC_BTN_9, IDC_BTN_DOT, IDC_BTN_PLUS, IDC_BTN_MINUS, IDC_BTN_MULTIPLY, IDC_BTN_DIVIDE, IDC_BTN_BACK, IDC_BTN_CLEAR, IDC_BTN_EQUAL];
  var i = 0;
  while (i < BTN_ID_COUNT) 
    {
      var button_name = new TizenLib.String(this.button_names[i]);
      var button = TizenLib.casts.Button_of_Control(this.GetControl(button_name));
      button.SetActionId(i);
      button.AddActionEventListener(this.ael);
      i++;
    }
  var id = new TizenLib.String(IDC_LBL_DISPLAY);
  this.labelPrint = TizenLib.casts.Label_of_Control(this.GetControl(id));
  this.labelPrint.SetTextHorizontalAlignment(ALIGNMENT_RIGHT);
  return E_SUCCESS;
} --> [{ GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void } | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, button_names: Array<string> }]() -> integer
function() {
  this.calcMode = MODE_OPERAND1;
  this.operator = BTN_ID_COUNT;
  this.op1 = "";
  this.op2 = "";
  this.errString = "";
} --> [{  | errString: string, op2: string, op1: string, operator: integer, calcMode: integer }]() -> void
function() {
  var path = new TizenLib.String("IDF_FORM");
  var r = this.Construct(path);
  var hdr = this.GetHeader();
  r = hdr.SetStyle(HEADER_STYLE_TITLE);
  var title = new TizenLib.String("Calculator");
  r = hdr.SetTitleText(title);
  return r;
} --> [{ GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer |  }]() -> integer
function() {
  var r = E_SUCCESS;
  r = this.AddCalculatorPanel();
  return r;
} --> [{ AddCalculatorPanel: []() -> integer |  }]() -> integer
function() {
  var x = this;
  return E_SUCCESS;
} --> [{  |  }]() -> integer
function() {
  var x = this;
  return E_SUCCESS;
} --> [{  |  }]() -> integer
function(appRegistry) {
  var frame = new TizenLib.Frame();
  frame.Construct();
  this.AddFrame(frame);
  var form = new CalculatorForm();
  form.init();
  frame.AddControl(form);
  frame.SetCurrentForm(form);
  return true;
} --> [{ AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer |  }]({ _____cpp_receiver: void |  }) -> boolean
function(appRegistry, urgent) {
  var x = this;
  return true;
} --> [{  |  }]({ _____cpp_receiver: void |  },boolean) -> boolean
function(k) {
  switch (this.calcMode) {
    case MODE_INVALID:
      return true;
    case MODE_RESULT:
      this.HandleClearKey();
      this.calcMode = MODE_OPERAND1;
      break;
    case MODE_OPERATOR:
      this.op2 = "";
      this.calcMode = MODE_OPERAND2;
      break;
    case MODE_OPERAND1:
    case MODE_OPERAND2:
      break;
  }
  return this.UpdateOperand(k);
} --> [{ UpdateOperand: [](integer) -> boolean, HandleClearKey: []() -> void | calcMode: integer, op2: string }](integer) -> boolean
function(k) {
  switch (this.calcMode) {
    case MODE_INVALID:
      return;
    case MODE_OPERATOR:
      if ((k === BTN_ID_PLUS) || (k === BTN_ID_MINUS)) 
      {
        this.op2 = "";
        this.UpdateOperand(k);
        this.calcMode = MODE_OPERAND2;
        break;
      }
      this.operator = k;
      break;
    case MODE_OPERAND1:
      if ((this.op1 == "") || (this.op1 == "0")) 
      {
        if (k == BTN_ID_PLUS || k == BTN_ID_MINUS) 
        {
          if (this.op1 == "0") 
          {
            this.UpdateOperand(k);
          } else {
            this.op1 = "";
            this.UpdateOperand(k);
            break;
          }
        }
        this.op1 = "0";
      }
      this.calcMode = MODE_OPERATOR;
      this.operator = k;
      break;
    case MODE_OPERAND2:
      this.HandleEqualKey();
    case MODE_RESULT:
      this.calcMode = MODE_OPERAND1;
      this.op2 = "";
      this.HandleOperatorKeys(k);
      break;
  }
} --> [{ HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }](integer) -> void
function(k) {
  var op = "";
  var charCount = MAX_PRINTABLE_CHARS;
  var index = -1;
  if (this.calcMode === MODE_OPERAND1) 
  {
    op = this.op1;
  } else {
    op = this.op2;
  }
  var sign = op.charAt(0);
  if (sign == "-" || sign == "+") 
  {
    charCount++;
  }
  index = op.indexOf(".");
  if (index != -1) 
  {
    charCount++;
  }
  if (op.length < charCount) 
  {
    if (k == BTN_ID_DOT) 
    {
      if (index == -1) 
      {
        if (op == "" || op == "-") 
        {
          op = op.concat("0");
        }
        op = op.concat(".");
      }
    } else if ((BTN_ID_0 <= k) && (k <= BTN_ID_9)) 
    {
      if (op == "0") 
      {
        op = "";
      }
      op = op.concat(k.toString());
    } else if (k == BTN_ID_MINUS) 
    {
      if (op == "") 
      {
        op = op.concat("-");
      }
    }
    if (this.calcMode === MODE_OPERAND1) 
    {
      this.op1 = op;
    } else {
      this.op2 = op;
    }
    return true;
  }
  return false;
} --> [{ calcMode: integer | op2: string, op1: string }](integer) -> boolean
function(k) {
  var status;
  switch (k) {
    case BTN_ID_0:
    case BTN_ID_1:
    case BTN_ID_2:
    case BTN_ID_3:
    case BTN_ID_4:
    case BTN_ID_5:
    case BTN_ID_6:
    case BTN_ID_7:
    case BTN_ID_8:
    case BTN_ID_9:
    case BTN_ID_DOT:
      status = this.state.HandleNumKeys(k);
      if (status === false) 
      {
        console.log("Bad!");
        return "Bad";
      }
      break;
    case BTN_ID_PLUS:
    case BTN_ID_MINUS:
    case BTN_ID_MULTIPLY:
    case BTN_ID_DIVIDE:
      this.state.HandleOperatorKeys(k);
      break;
    case BTN_ID_BACK:
      this.state.HandleBackKey();
      break;
    case BTN_ID_CLEAR:
      this.state.HandleClearKey();
      break;
    case BTN_ID_EQUAL:
      this.state.HandleEqualKey();
      break;
  }
  if ((this.state.errString == "INF") || (this.state.errString == "-INF")) 
  {
    console.log(this.state.errString);
    return this.state.errString;
  }
  var displayText = this.state.GetResult();
  if (displayText == "") 
  {
    displayText = "0";
  }
  var indexOfDec = displayText.indexOf(".");
  var indexOfE = displayText.indexOf("e");
  var l = displayText.length;
  if (l > MAX_DIGITS_DISPLAY) 
  {
    if ((l - indexOfDec) > DIGITS_AFTER_DECIMAL_POINT) 
    {
      if (indexOfE > 0) 
      {
        displayText = displayText.substring(0, indexOfDec + MAX_DIGITS_AFTER_DECIMAL_POINT - 1);
      } else {
        displayText = displayText.substring(0, MAX_DIGITS_DISPLAY - 1);
      }
    }
  }
  console.log(displayText);
  return displayText;
} --> [{ state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void } |  }](integer) -> string
function(source, actionId) {
  var displayText = this.calcForm.calcModel.OnActionPerformed(actionId);
  var s = new TizenLib.String(displayText);
  this.calcForm.labelPrint.SetText(s);
  this.calcForm.Draw();
} --> [{ calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer } |  }]({ _____cpp_receiver: void |  },integer) -> void
hdr --> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }
hdr --> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }
hdr --> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }
hdr.SetStyle --> [](integer) -> integer
hdr.SetStyle(HEADER_STYLE_TITLE) --> integer
hdr.SetTitleText --> []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer
hdr.SetTitleText(title) --> integer
i --> integer
i --> integer
i --> integer
i --> integer
i --> integer
i < BTN_ID_COUNT --> boolean
i++ --> integer
id --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
id --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
index != -1 --> boolean
index --> integer
index --> integer
index --> integer
index --> integer
index = op.indexOf(".") --> integer
index == -1 --> boolean
indexOfDec + MAX_DIGITS_AFTER_DECIMAL_POINT - 1 --> integer
indexOfDec + MAX_DIGITS_AFTER_DECIMAL_POINT --> integer
indexOfDec --> integer
indexOfDec --> integer
indexOfDec --> integer
indexOfDec --> integer
indexOfDec --> integer
indexOfDec --> integer
indexOfDec --> integer
indexOfDec = op1.toString().indexOf(".") --> integer
indexOfDec == -1 && op1.toString().length > 8 --> boolean
indexOfDec == -1 --> boolean
indexOfDec > 7 --> boolean
indexOfDec > 7 || (indexOfDec == -1 && op1.toString().length > 8) --> boolean
indexOfE --> integer
indexOfE --> integer
indexOfE > 0 --> boolean
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k --> integer
k <= BTN_ID_9 --> boolean
k == BTN_ID_DOT --> boolean
k == BTN_ID_MINUS --> boolean
k == BTN_ID_MINUS --> boolean
k == BTN_ID_PLUS --> boolean
k == BTN_ID_PLUS || k == BTN_ID_MINUS --> boolean
k === BTN_ID_MINUS --> boolean
k === BTN_ID_PLUS --> boolean
k.toString --> []() -> string INTERSECT [](integer) -> string
k.toString() --> string
l - indexOfDec --> integer
l --> integer
l --> integer
l --> integer
l > MAX_DIGITS_DISPLAY --> boolean
new CalcActionEventListener(this) --> { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }
new Calculator() --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, Terminate: []() -> void | OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean }
new CalculatorForm() --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
new CalculatorModel() --> {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }
new State() --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
new TizenLib.Application() --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, Terminate: []() -> void |  }
new TizenLib.Form() --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }
new TizenLib.Frame() --> { _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }
new TizenLib.IActionEventListener() --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void |  }
new TizenLib.String("Calculator") --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
new TizenLib.String("IDF_FORM") --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
new TizenLib.String(IDC_LBL_DISPLAY) --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
new TizenLib.String(displayText) --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
new TizenLib.String(this.button_names[i]) --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
null --> Array<string>
null --> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }
null --> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op --> string
op = "" --> string
op = op.concat("-") --> string
op = op.concat(".") --> string
op = op.concat("0") --> string
op = op.concat(k.toString()) --> string
op = this.op1 --> string
op = this.op2 --> string
op == "" --> boolean
op == "" --> boolean
op == "" || op == "-" --> boolean
op == "-" --> boolean
op == "0" --> boolean
op.charAt --> [](integer) -> string
op.charAt(0) --> string
op.concat --> [](string) -> string
op.concat --> [](string) -> string
op.concat --> [](string) -> string
op.concat --> [](string) -> string
op.concat("-") --> string
op.concat(".") --> string
op.concat("0") --> string
op.concat(k.toString()) --> string
op.indexOf --> [](string) -> integer
op.indexOf(".") --> integer
op.length --> integer
op.length < charCount --> boolean
op1 *= op2 --> float
op1 += op2 --> float
op1 --> float
op1 --> float
op1 --> float
op1 --> float
op1 --> float
op1 --> float
op1 --> float
op1 --> float
op1 --> float
op1 --> float
op1 --> float
op1 --> float
op1 --> float
op1 -= op2 --> float
op1 /= op2 --> float
op1 < MIN_PRINTABLE_VALUE --> boolean
op1 == 0 --> boolean
op1 > 0 && op1 < MIN_PRINTABLE_VALUE --> boolean
op1 > 0 --> boolean
op1 > 0 --> boolean
op1.toExponential --> [](integer) -> string
op1.toExponential(7) --> string
op1.toString --> []() -> string INTERSECT [](integer) -> string
op1.toString --> []() -> string INTERSECT [](integer) -> string
op1.toString --> []() -> string INTERSECT [](integer) -> string
op1.toString() --> string
op1.toString() --> string
op1.toString() --> string
op1.toString().indexOf --> [](string) -> integer
op1.toString().indexOf(".") --> integer
op1.toString().length --> integer
op1.toString().length > 8 --> boolean
op2 != 0 --> boolean
op2 --> float
op2 --> float
op2 --> float
op2 --> float
op2 --> float
op2 --> float
parseFloat --> (string) -> float
parseFloat --> (string) -> float
parseFloat(this.op1) --> float
parseFloat(this.op2) --> float
path --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
path --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
r --> integer
r --> integer
r --> integer
r --> integer
r --> integer
r --> integer
r --> integer
r = hdr.SetStyle(HEADER_STYLE_TITLE) --> integer
r = hdr.SetTitleText(title) --> integer
r = this.AddCalculatorPanel() --> integer
s --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
s --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
sign --> string
sign --> string
sign --> string
sign == "+" --> boolean
sign == "-" --> boolean
sign == "-" || sign == "+" --> boolean
source --> { _____cpp_receiver: void |  }
status --> boolean
status --> boolean
status --> boolean
status = this.state.HandleNumKeys(k) --> boolean
status === false --> boolean
this --> ___
this --> ___
this --> ___
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this --> {  | errString: string, op2: string, op1: string, operator: integer, calcMode: integer }
this --> {  | errString: string, op2: string, op1: string, operator: integer, calcMode: integer }
this --> {  | errString: string, op2: string, op1: string, operator: integer, calcMode: integer }
this --> {  | errString: string, op2: string, op1: string, operator: integer, calcMode: integer }
this --> {  | errString: string, op2: string, op1: string, operator: integer, calcMode: integer }
this --> {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }
this --> {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }
this --> { AddCalculatorPanel: []() -> integer |  }
this --> { AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer |  }
this --> { Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }
this --> { Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }
this --> { Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }
this --> { Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }
this --> { Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }
this --> { Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }
this --> { Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }
this --> { Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }
this --> { Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }
this --> { Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }
this --> { Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }
this --> { Calculate: []() -> void, op1: string, calcMode: integer | op2: string, operator: integer }
this --> { GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void } | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, button_names: Array<string> }
this --> { GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void } | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, button_names: Array<string> }
this --> { GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void } | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, button_names: Array<string> }
this --> { GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void } | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, button_names: Array<string> }
this --> { GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void } | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, button_names: Array<string> }
this --> { GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void } | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, button_names: Array<string> }
this --> { GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void } | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, button_names: Array<string> }
this --> { GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer |  }
this --> { GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer |  }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleBackKey: []() -> void | calcMode: integer, op2: string, op1: string, operator: integer }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { HandleOperatorKeys: [](integer) -> void, HandleEqualKey: []() -> void, UpdateOperand: [](integer) -> boolean | op2: string, calcMode: integer, operator: integer, op1: string }
this --> { UpdateOperand: [](integer) -> boolean, HandleClearKey: []() -> void | calcMode: integer, op2: string }
this --> { UpdateOperand: [](integer) -> boolean, HandleClearKey: []() -> void | calcMode: integer, op2: string }
this --> { UpdateOperand: [](integer) -> boolean, HandleClearKey: []() -> void | calcMode: integer, op2: string }
this --> { UpdateOperand: [](integer) -> boolean, HandleClearKey: []() -> void | calcMode: integer, op2: string }
this --> { UpdateOperand: [](integer) -> boolean, HandleClearKey: []() -> void | calcMode: integer, op2: string }
this --> { UpdateOperand: [](integer) -> boolean, HandleClearKey: []() -> void | calcMode: integer, op2: string }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, Terminate: []() -> void | OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, AddFrame: []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer, Terminate: []() -> void | OnAppInitializing: []({ _____cpp_receiver: void |  }) -> boolean, OnAppTerminating: []({ _____cpp_receiver: void |  },boolean) -> boolean }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this --> { calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer } |  }
this --> { calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer } |  }
this --> { calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer } |  }
this --> { calcMode: integer | op2: string, op1: string }
this --> { calcMode: integer | op2: string, op1: string }
this --> { calcMode: integer | op2: string, op1: string }
this --> { calcMode: integer | op2: string, op1: string }
this --> { calcMode: integer | op2: string, op1: string }
this --> { calcMode: integer | op2: string, op1: string }
this --> { errString: string, op2: string, op1: string, calcMode: integer |  }
this --> { errString: string, op2: string, op1: string, calcMode: integer |  }
this --> { errString: string, op2: string, op1: string, calcMode: integer |  }
this --> { errString: string, op2: string, op1: string, calcMode: integer |  }
this --> { errString: string, op2: string, op1: string, calcMode: integer |  }
this --> { errString: string, op2: string, op1: string, calcMode: integer |  }
this --> { errString: string, op2: string, op1: string, calcMode: integer |  }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { operator: integer, op2: string | calcMode: integer, errString: string, op1: string }
this --> { state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void } |  }
this --> { state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void } |  }
this --> { state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void } |  }
this --> { state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void } |  }
this --> { state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void } |  }
this --> { state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void } |  }
this --> { state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void } |  }
this --> { state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void } |  }
this --> { state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void } |  }
this --> { state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void } |  }
this.AddCalculatorPanel --> []() -> integer
this.AddCalculatorPanel --> []() -> integer
this.AddCalculatorPanel = function() {
  this.button_names = [IDC_BTN_0, IDC_BTN_1, IDC_BTN_2, IDC_BTN_3, IDC_BTN_4, IDC_BTN_5, IDC_BTN_6, IDC_BTN_7, IDC_BTN_8, IDC_BTN_9, IDC_BTN_DOT, IDC_BTN_PLUS, IDC_BTN_MINUS, IDC_BTN_MULTIPLY, IDC_BTN_DIVIDE, IDC_BTN_BACK, IDC_BTN_CLEAR, IDC_BTN_EQUAL];
  var i = 0;
  while (i < BTN_ID_COUNT) 
    {
      var button_name = new TizenLib.String(this.button_names[i]);
      var button = TizenLib.casts.Button_of_Control(this.GetControl(button_name));
      button.SetActionId(i);
      button.AddActionEventListener(this.ael);
      i++;
    }
  var id = new TizenLib.String(IDC_LBL_DISPLAY);
  this.labelPrint = TizenLib.casts.Label_of_Control(this.GetControl(id));
  this.labelPrint.SetTextHorizontalAlignment(ALIGNMENT_RIGHT);
  return E_SUCCESS;
} --> []() -> integer
this.AddCalculatorPanel() --> integer
this.AddFrame --> []({ _____cpp_receiver: void, SetCurrentForm: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, AddControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: [](<<recursive>>) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> integer, Construct: []() -> integer |  }) -> integer
this.AddFrame(frame) --> integer
this.Calculate --> []() -> void
this.Calculate --> []() -> void
this.Calculate = function() {
  if ((this.errString == "INF") || (this.errString == "-INF")) 
  return;
  var op1 = parseFloat(this.op1);
  var op2 = parseFloat(this.op2);
  switch (this.operator) {
    case BTN_ID_PLUS:
      op1 += op2;
      break;
    case BTN_ID_MINUS:
      op1 -= op2;
      break;
    case BTN_ID_MULTIPLY:
      op1 *= op2;
      break;
    case BTN_ID_DIVIDE:
      if (op2 != 0) 
      {
        op1 /= op2;
      } else {
        this.calcMode = MODE_INVALID;
        if (op1 == 0) 
        {
          this.errString = "NAN";
        } else {
          if (op1 > 0) 
          {
            this.errString = "INF";
          } else {
            this.errString = "-INF";
          }
        }
        return;
      }
      break;
  }
  var indexOfDec = 0;
  indexOfDec = op1.toString().indexOf(".");
  if (indexOfDec > 7 || (indexOfDec == -1 && op1.toString().length > 8)) 
  {
    this.op1 = op1.toExponential(7);
  } else {
    this.op1 = op1.toString();
  }
  if (op1 > 0 && op1 < MIN_PRINTABLE_VALUE) 
  {
    this.op1 = "0";
  }
  if (this.op1 == "inf") 
  {
    this.errString = "INF";
    this.calcMode = MODE_INVALID;
  } else if (this.op1 == "-inf") 
  {
    this.errString = "-INF";
    this.calcMode = MODE_INVALID;
  } else {
    this.calcMode = MODE_RESULT;
  }
} --> []() -> void
this.Calculate() --> void
this.Construct --> []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer
this.Construct(path) --> integer
this.GetControl --> []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }
this.GetControl --> []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }
this.GetControl(button_name) --> { _____cpp_receiver: void |  }
this.GetControl(id) --> { _____cpp_receiver: void |  }
this.GetHeader --> []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }
this.GetHeader() --> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }
this.GetResult --> []() -> string
this.GetResult = function() {
  switch (this.calcMode) {
    case MODE_OPERATOR:
    case MODE_RESULT:
    case MODE_OPERAND1:
      return this.op1;
    case MODE_OPERAND2:
      if (this.op2 == "") 
      {
        return this.op1;
      }
      return this.op2;
    case MODE_INVALID:
      return this.errString;
  }
  return this.errString;
} --> []() -> string
this.HandleBackKey --> []() -> void
this.HandleBackKey --> []() -> void
this.HandleBackKey = function() {
  switch (this.calcMode) {
    case MODE_RESULT:
    case MODE_INVALID:
      return;
    case MODE_OPERATOR:
      this.operator = BTN_ID_COUNT;
      this.calcMode = MODE_OPERAND1;
    case MODE_OPERAND1:
      if (this.op1 != "") 
      {
        this.op1 = this.op1.substring(0, this.op1.length - 1);
      }
      break;
    case MODE_OPERAND2:
      if (this.op2 != "") 
      {
        this.op2 = this.op2.substring(0, this.op2.length - 1);
      } else {
        this.calcMode = MODE_OPERATOR;
        this.HandleBackKey();
      }
      break;
  }
} --> []() -> void
this.HandleBackKey() --> void
this.HandleClearKey --> []() -> void
this.HandleClearKey --> []() -> void
this.HandleClearKey = function() {
  this.calcMode = MODE_OPERAND1;
  this.operator = BTN_ID_COUNT;
  this.op1 = "";
  this.op2 = "";
  this.errString = "";
} --> []() -> void
this.HandleClearKey() --> void
this.HandleEqualKey --> []() -> void
this.HandleEqualKey --> []() -> void
this.HandleEqualKey = function() {
  switch (this.calcMode) {
    case MODE_INVALID:
      return;
    case MODE_OPERATOR:
      this.op2 = this.op1;
      break;
    case MODE_OPERAND1:
      this.op2 = "0";
      this.operator = BTN_ID_PLUS;
      break;
    case MODE_OPERAND2:
      if (this.op2 == "" || this.op2 == "-") 
      {
        if (this.operator == BTN_ID_MULTIPLY || this.operator == BTN_ID_DIVIDE) 
        {
          this.op2 = "1";
        } else {
          this.op2 = "0";
        }
      }
      break;
    case MODE_RESULT:
      break;
  }
  this.Calculate();
} --> []() -> void
this.HandleEqualKey() --> void
this.HandleNumKeys --> [](integer) -> boolean
this.HandleNumKeys = function(k) {
  switch (this.calcMode) {
    case MODE_INVALID:
      return true;
    case MODE_RESULT:
      this.HandleClearKey();
      this.calcMode = MODE_OPERAND1;
      break;
    case MODE_OPERATOR:
      this.op2 = "";
      this.calcMode = MODE_OPERAND2;
      break;
    case MODE_OPERAND1:
    case MODE_OPERAND2:
      break;
  }
  return this.UpdateOperand(k);
} --> [](integer) -> boolean
this.HandleOperatorKeys --> [](integer) -> void
this.HandleOperatorKeys --> [](integer) -> void
this.HandleOperatorKeys = function(k) {
  switch (this.calcMode) {
    case MODE_INVALID:
      return;
    case MODE_OPERATOR:
      if ((k === BTN_ID_PLUS) || (k === BTN_ID_MINUS)) 
      {
        this.op2 = "";
        this.UpdateOperand(k);
        this.calcMode = MODE_OPERAND2;
        break;
      }
      this.operator = k;
      break;
    case MODE_OPERAND1:
      if ((this.op1 == "") || (this.op1 == "0")) 
      {
        if (k == BTN_ID_PLUS || k == BTN_ID_MINUS) 
        {
          if (this.op1 == "0") 
          {
            this.UpdateOperand(k);
          } else {
            this.op1 = "";
            this.UpdateOperand(k);
            break;
          }
        }
        this.op1 = "0";
      }
      this.calcMode = MODE_OPERATOR;
      this.operator = k;
      break;
    case MODE_OPERAND2:
      this.HandleEqualKey();
    case MODE_RESULT:
      this.calcMode = MODE_OPERAND1;
      this.op2 = "";
      this.HandleOperatorKeys(k);
      break;
  }
} --> [](integer) -> void
this.HandleOperatorKeys(k) --> void
this.OnActionPerformed --> [](integer) -> string
this.OnActionPerformed --> []({ _____cpp_receiver: void |  },integer) -> void
this.OnActionPerformed = function(k) {
  var status;
  switch (k) {
    case BTN_ID_0:
    case BTN_ID_1:
    case BTN_ID_2:
    case BTN_ID_3:
    case BTN_ID_4:
    case BTN_ID_5:
    case BTN_ID_6:
    case BTN_ID_7:
    case BTN_ID_8:
    case BTN_ID_9:
    case BTN_ID_DOT:
      status = this.state.HandleNumKeys(k);
      if (status === false) 
      {
        console.log("Bad!");
        return "Bad";
      }
      break;
    case BTN_ID_PLUS:
    case BTN_ID_MINUS:
    case BTN_ID_MULTIPLY:
    case BTN_ID_DIVIDE:
      this.state.HandleOperatorKeys(k);
      break;
    case BTN_ID_BACK:
      this.state.HandleBackKey();
      break;
    case BTN_ID_CLEAR:
      this.state.HandleClearKey();
      break;
    case BTN_ID_EQUAL:
      this.state.HandleEqualKey();
      break;
  }
  if ((this.state.errString == "INF") || (this.state.errString == "-INF")) 
  {
    console.log(this.state.errString);
    return this.state.errString;
  }
  var displayText = this.state.GetResult();
  if (displayText == "") 
  {
    displayText = "0";
  }
  var indexOfDec = displayText.indexOf(".");
  var indexOfE = displayText.indexOf("e");
  var l = displayText.length;
  if (l > MAX_DIGITS_DISPLAY) 
  {
    if ((l - indexOfDec) > DIGITS_AFTER_DECIMAL_POINT) 
    {
      if (indexOfE > 0) 
      {
        displayText = displayText.substring(0, indexOfDec + MAX_DIGITS_AFTER_DECIMAL_POINT - 1);
      } else {
        displayText = displayText.substring(0, MAX_DIGITS_DISPLAY - 1);
      }
    }
  }
  console.log(displayText);
  return displayText;
} --> [](integer) -> string
this.OnActionPerformed = function(source, actionId) {
  var displayText = this.calcForm.calcModel.OnActionPerformed(actionId);
  var s = new TizenLib.String(displayText);
  this.calcForm.labelPrint.SetText(s);
  this.calcForm.Draw();
} --> []({ _____cpp_receiver: void |  },integer) -> void
this.OnAppInitializing --> []({ _____cpp_receiver: void |  }) -> boolean
this.OnAppInitializing = function(appRegistry) {
  var frame = new TizenLib.Frame();
  frame.Construct();
  this.AddFrame(frame);
  var form = new CalculatorForm();
  form.init();
  frame.AddControl(form);
  frame.SetCurrentForm(form);
  return true;
} --> []({ _____cpp_receiver: void |  }) -> boolean
this.OnAppTerminating --> []({ _____cpp_receiver: void |  },boolean) -> boolean
this.OnAppTerminating = function(appRegistry, urgent) {
  var x = this;
  return true;
} --> []({ _____cpp_receiver: void |  },boolean) -> boolean
this.OnDraw --> []() -> integer
this.OnDraw = function() {
  var x = this;
  return E_SUCCESS;
} --> []() -> integer
this.OnInitializing --> []() -> integer
this.OnInitializing = function() {
  var r = E_SUCCESS;
  r = this.AddCalculatorPanel();
  return r;
} --> []() -> integer
this.OnTerminating --> []() -> integer
this.OnTerminating = function() {
  var x = this;
  return E_SUCCESS;
} --> []() -> integer
this.UpdateOperand --> [](integer) -> boolean
this.UpdateOperand --> [](integer) -> boolean
this.UpdateOperand --> [](integer) -> boolean
this.UpdateOperand --> [](integer) -> boolean
this.UpdateOperand --> [](integer) -> boolean
this.UpdateOperand = function(k) {
  var op = "";
  var charCount = MAX_PRINTABLE_CHARS;
  var index = -1;
  if (this.calcMode === MODE_OPERAND1) 
  {
    op = this.op1;
  } else {
    op = this.op2;
  }
  var sign = op.charAt(0);
  if (sign == "-" || sign == "+") 
  {
    charCount++;
  }
  index = op.indexOf(".");
  if (index != -1) 
  {
    charCount++;
  }
  if (op.length < charCount) 
  {
    if (k == BTN_ID_DOT) 
    {
      if (index == -1) 
      {
        if (op == "" || op == "-") 
        {
          op = op.concat("0");
        }
        op = op.concat(".");
      }
    } else if ((BTN_ID_0 <= k) && (k <= BTN_ID_9)) 
    {
      if (op == "0") 
      {
        op = "";
      }
      op = op.concat(k.toString());
    } else if (k == BTN_ID_MINUS) 
    {
      if (op == "") 
      {
        op = op.concat("-");
      }
    }
    if (this.calcMode === MODE_OPERAND1) 
    {
      this.op1 = op;
    } else {
      this.op2 = op;
    }
    return true;
  }
  return false;
} --> [](integer) -> boolean
this.UpdateOperand(k) --> boolean
this.UpdateOperand(k) --> boolean
this.UpdateOperand(k) --> boolean
this.UpdateOperand(k) --> boolean
this.ael --> { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }
this.ael --> { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }
this.ael = new CalcActionEventListener(this) --> { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: <<recursive>>, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }
this.button_names --> Array<string>
this.button_names --> Array<string>
this.button_names --> Array<string>
this.button_names = [IDC_BTN_0, IDC_BTN_1, IDC_BTN_2, IDC_BTN_3, IDC_BTN_4, IDC_BTN_5, IDC_BTN_6, IDC_BTN_7, IDC_BTN_8, IDC_BTN_9, IDC_BTN_DOT, IDC_BTN_PLUS, IDC_BTN_MINUS, IDC_BTN_MULTIPLY, IDC_BTN_DIVIDE, IDC_BTN_BACK, IDC_BTN_CLEAR, IDC_BTN_EQUAL] --> Array<string>
this.button_names = null --> Array<string>
this.button_names[i] --> string
this.calcForm --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this.calcForm --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this.calcForm --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this.calcForm --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this.calcForm = f --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, SetFormBackEventListener: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, OnFormBackRequested: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, GetControl: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> { _____cpp_receiver: void |  }, Draw: []() -> void, OnTerminating: []() -> integer, GetHeader: []() -> { _____cpp_receiver: void, SetTitleText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, SetStyle: [](integer) -> integer |  }, OnDraw: []() -> integer, SetFormBackEventListener: [](<<recursive>>) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer, OnInitializing: []() -> integer |  }) -> void |  }) -> void, Construct: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> integer | labelPrint: { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }, ael: { _____cpp_receiver: void, _____gen_cpp_proxy: void | calcForm: <<recursive>>, OnActionPerformed: []({ _____cpp_receiver: void |  },integer) -> void }, calcModel: {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }, button_names: Array<string>, init: []() -> integer, OnInitializing: []() -> integer, OnTerminating: []() -> integer, OnDraw: []() -> integer, AddCalculatorPanel: []() -> integer }
this.calcForm.Draw --> []() -> void
this.calcForm.Draw() --> void
this.calcForm.calcModel --> {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }
this.calcForm.calcModel.OnActionPerformed --> [](integer) -> string
this.calcForm.calcModel.OnActionPerformed(actionId) --> string
this.calcForm.labelPrint --> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }
this.calcForm.labelPrint.SetText --> []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void
this.calcForm.labelPrint.SetText(s) --> void
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode --> integer
this.calcMode = MODE_INVALID --> integer
this.calcMode = MODE_INVALID --> integer
this.calcMode = MODE_INVALID --> integer
this.calcMode = MODE_OPERAND1 --> integer
this.calcMode = MODE_OPERAND1 --> integer
this.calcMode = MODE_OPERAND1 --> integer
this.calcMode = MODE_OPERAND1 --> integer
this.calcMode = MODE_OPERAND1 --> integer
this.calcMode = MODE_OPERAND2 --> integer
this.calcMode = MODE_OPERAND2 --> integer
this.calcMode = MODE_OPERATOR --> integer
this.calcMode = MODE_OPERATOR --> integer
this.calcMode = MODE_RESULT --> integer
this.calcMode === MODE_OPERAND1 --> boolean
this.calcMode === MODE_OPERAND1 --> boolean
this.calcModel --> {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }
this.calcModel = new CalculatorModel() --> {  | state: {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }, OnActionPerformed: [](integer) -> string }
this.errString --> string
this.errString --> string
this.errString --> string
this.errString --> string
this.errString --> string
this.errString --> string
this.errString --> string
this.errString --> string
this.errString --> string
this.errString --> string
this.errString --> string
this.errString = "" --> string
this.errString = "-INF" --> string
this.errString = "-INF" --> string
this.errString = "ERROR" --> string
this.errString = "INF" --> string
this.errString = "INF" --> string
this.errString = "NAN" --> string
this.errString == "-INF" --> boolean
this.errString == "INF" --> boolean
this.init --> []() -> integer
this.init = function() {
  var path = new TizenLib.String("IDF_FORM");
  var r = this.Construct(path);
  var hdr = this.GetHeader();
  r = hdr.SetStyle(HEADER_STYLE_TITLE);
  var title = new TizenLib.String("Calculator");
  r = hdr.SetTitleText(title);
  return r;
} --> []() -> integer
this.labelPrint --> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }
this.labelPrint --> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }
this.labelPrint --> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }
this.labelPrint --> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }
this.labelPrint = TizenLib.casts.Label_of_Control(this.GetControl(id)) --> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }
this.labelPrint = null --> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }
this.labelPrint = null --> { _____cpp_receiver: void, SetTextHorizontalAlignment: [](integer) -> void, SetText: []({ _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }) -> void |  }
this.labelPrint.SetTextHorizontalAlignment --> [](integer) -> void
this.labelPrint.SetTextHorizontalAlignment(ALIGNMENT_RIGHT) --> void
this.op1 != "" --> boolean
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 --> string
this.op1 = "" --> string
this.op1 = "" --> string
this.op1 = "0" --> string
this.op1 = "0" --> string
this.op1 = "0" --> string
this.op1 = op --> string
this.op1 = op1.toExponential(7) --> string
this.op1 = op1.toString() --> string
this.op1 = this.op1.substring(0, this.op1.length - 1) --> string
this.op1 == "" --> boolean
this.op1 == "-inf" --> boolean
this.op1 == "0" --> boolean
this.op1 == "0" --> boolean
this.op1 == "inf" --> boolean
this.op1.length - 1 --> integer
this.op1.length --> integer
this.op1.substring --> [](integer,integer) -> string
this.op1.substring(0, this.op1.length - 1) --> string
this.op2 != "" --> boolean
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 --> string
this.op2 = "" --> string
this.op2 = "" --> string
this.op2 = "" --> string
this.op2 = "" --> string
this.op2 = "" --> string
this.op2 = "0" --> string
this.op2 = "0" --> string
this.op2 = "1" --> string
this.op2 = op --> string
this.op2 = this.op1 --> string
this.op2 = this.op2.substring(0, this.op2.length - 1) --> string
this.op2 == "" --> boolean
this.op2 == "" --> boolean
this.op2 == "" || this.op2 == "-" --> boolean
this.op2 == "-" --> boolean
this.op2.length - 1 --> integer
this.op2.length --> integer
this.op2.substring --> [](integer,integer) -> string
this.op2.substring(0, this.op2.length - 1) --> string
this.operator --> integer
this.operator --> integer
this.operator --> integer
this.operator --> integer
this.operator --> integer
this.operator --> integer
this.operator --> integer
this.operator --> integer
this.operator --> integer
this.operator = BTN_ID_COUNT --> integer
this.operator = BTN_ID_COUNT --> integer
this.operator = BTN_ID_COUNT --> integer
this.operator = BTN_ID_PLUS --> integer
this.operator = k --> integer
this.operator = k --> integer
this.operator == BTN_ID_DIVIDE --> boolean
this.operator == BTN_ID_MULTIPLY --> boolean
this.operator == BTN_ID_MULTIPLY || this.operator == BTN_ID_DIVIDE --> boolean
this.state --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this.state --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this.state --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this.state --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this.state --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this.state --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this.state --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this.state --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this.state --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this.state --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this.state --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this.state = new State() --> {  | errString: string, calcMode: integer, operator: integer, op1: string, op2: string, GetResult: []() -> string, UpdateOperand: [](integer) -> boolean, HandleNumKeys: [](integer) -> boolean, HandleOperatorKeys: [](integer) -> void, Calculate: []() -> void, HandleEqualKey: []() -> void, HandleClearKey: []() -> void, HandleBackKey: []() -> void }
this.state.GetResult --> []() -> string
this.state.GetResult() --> string
this.state.HandleBackKey --> []() -> void
this.state.HandleBackKey() --> void
this.state.HandleClearKey --> []() -> void
this.state.HandleClearKey() --> void
this.state.HandleEqualKey --> []() -> void
this.state.HandleEqualKey() --> void
this.state.HandleNumKeys --> [](integer) -> boolean
this.state.HandleNumKeys(k) --> boolean
this.state.HandleOperatorKeys --> [](integer) -> void
this.state.HandleOperatorKeys(k) --> void
this.state.errString --> string
this.state.errString --> string
this.state.errString --> string
this.state.errString --> string
this.state.errString == "-INF" --> boolean
this.state.errString == "INF" --> boolean
title --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
title --> { _____cpp_receiver: void, _____gen_cpp_proxy: void, IndexOf: [](string,integer) -> integer, Clear: []() -> void, Contains: [](<<recursive>>) -> boolean, SubString: [](integer) -> <<recursive>>, IsEmpty: []() -> boolean, CompareTo: [](<<recursive>>) -> integer, GetPointer: []() -> string, Append: [](<<recursive>>) -> integer |  }
true --> boolean
true --> boolean
true --> boolean
true --> boolean
urgent --> boolean
x --> ___
x --> ___
x --> ___
